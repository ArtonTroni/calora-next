services:
  # Next.js Application
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: calora-nextjs
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/calora
    networks:
      - calora-network
    depends_on:
      - mongo

  # nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: calora-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nextjs-app
    networks:
      - calora-network

  # MongoDB Database
  mongo:
    image: mongo:7
    container_name: calora-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: calora
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - calora-network

  # MongoDB Admin Interface (optional)
  mongo-express:
    image: mongo-express:latest
    container_name: calora-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo
    networks:
      - calora-network

networks:
  calora-network:
    driver: bridge

volumes:
  mongo_data: